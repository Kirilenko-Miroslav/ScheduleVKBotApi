namespace Logic
{
    public static class MyAppLogic
    {
        public static string ProcessingMessage(string message, long PeerId, CheckUpdate schedule)
        {
            string[] words = message.Split(' ');
            switch (words[0].ToLower())
            {
                case "?":
                    {
                        goto case "помощь";
                    }
                case "помощь":
                    {
                        return "✉\"Запись\" - позволяет осуществить запись на рассылку каких-либо уведомлений\n" +
                            "⚠На данный момент только запись на изменение ежедневного расписания " +
                            "(уведомление с расписанием будет приходить каждый день по мере его обновления\n" +
                            "❗Чтобы записаться верно укажите после слова \"Запись\" слово \"группа\" или \"преподаватель\" или \"аудитория\" " +
                            "в зависимости от того на какой источник хотите подписаться\n" +
                            "❗Далее после второго слова укажите группу или ФИО преподавателя или название аудитории как это написано в расписании на сайте\n" +
                            "Примеры команд:\n" +
                            "✅Запись группа 0219-ЭК(о)\n" +
                            "✅Запись преподаватель Гусева Е.Н.\n" +
                            "✅Запись аудитория 405(ДЗФС)\n" +
                            "✅Запись аудитория Стадион Д\n" +
                            "\n" +
                            "✂\"Удалить\" - позволяет удалить запись на рассылку уведомлений\n" +
                            "❗Чтобы удалить запись верно укажите такие же слова как и при создании(см.\"Запись\")\n" +
                            "Примеры команд:\n" +
                            "✅Удалить группа 0219-ЭК(о)\n" +
                            "✅Удалить преподаватель Гусева Е.Н.\n" +
                            "✅Удалить аудитория 405(ДЗФС)\n" +
                            "✅Удалить аудитория Стадион Д\n" +
                            "\n" +
                            "🔎\"Расписание\" - позволяет посмотреть расписание на выбранную дату\n" +
                            "❗Чтобы получить достоверное расписание верно укажите такие же слова как и в остальных командах (см. \"Запись\"), " +
                            "а также укажите дату, расписание на которую хотите увидеть\n" +
                            "⚠На данный момент доступны только даты, существующие в разделе \"Неделя\" расписания сайта\n" +
                            "⚠Чтобы получить расписание на текущий (по расписанию) день можно не указывать дату (как в первом примере)\n" +
                            "Примеры команд:\n" +
                            "✅Расписание группа 0219-ЭК(о)\n" +
                            "✅Расписание группа 0219-ЭК(о) 25.10\n" +
                            "✅Расписание преподаватель Гусева Е.Н. 31.12\n" +
                            "✅Расписание аудитория 405(ДЗФС) 01.11\n" +
                            "✅Расписание аудитория Стадион Д 11.11\n";
                    }
                case "запись":
                    {
                        if (words.Length == 1)
                            return "❗Второе слово должно быть либо \"группа\" либо \"преподаватель\" либо \"аудитория\"";
                        return CreateRecord(words[1], ExtractMessage(message));
                    }
                case "удалить":
                    {
                        if (words.Length == 1)
                            return "❗Второе слово должно быть либо \"группа\" либо \"преподаватель\" либо \"аудитория\"";
                        return DeleteRecord(words[1], ExtractMessage(message));
                    }
                case "расписание":
                    if (words.Length == 1)
                        return "❗Второе слово должно быть либо \"группа\" либо \"преподаватель\" либо \"аудитория\"";
                    return SearchSchedule(words[1], ExtractMessage(message), schedule);
                default:
                    {
                        return "К сожалению, я пока не умею работать с данным сообщением/командой\nЕсли желаете увидеть список комманд - введите \"?\" или \"Помощь\"\n" +
                            "Если у вас возникли вопросы по работе с ботом напишите администратору группы";
                    }
            }
        }
        public static string CreateRecord(string category, string data)//позволяет создать запись на рассылку
        {
            if (category != "группа" && category != "преподаватель" && category != "аудитория")
                return "❗Второе слово должно быть либо \"группа\" либо \"преподаватель\" либо \"аудитория\"";
            if (data == "")
                return $"❗Введите название/имя вашего {category} в запросе";

            return "✅Запись успешно создана!\n(пока в разработке)";
        }
        public static string DeleteRecord(string category, string data)//выполняет удаление запись из рассылки
        {
            if (category != "группа" && category != "преподаватель" && category != "аудитория")
                return "❗Второе слово должно быть либо \"группа\" либо \"преподаватель\" либо \"аудитория\"";
            if (data == "")
                return $"❗Введите название/имя вашего {category} в запросе";

            return "✅Запись успешно удалена\n(пока в разработке)";
        }
        public static string SearchSchedule(string category, string data, CheckUpdate schedule)//выполняет поиск и показ расписания
        {
            if (category != "группа" && category != "преподаватель" && category != "аудитория")
                return "❗Второе слово должно быть либо \"группа\" либо \"преподаватель\" либо \"аудитория\"";
            if (data == "")
                return $"❗Введите название/имя вашего {category} в запросе";

            if (HasDate(data))
            {
                return $"✅Вот ваше расписание по {category} - {data.Substring(0, data.Length - 5)} на {data.Substring(data.Length - 5)}:\n(пока в разработке)";
            }
            else
            {
                if (category == "группа")
                    return $"✅Вот ваше расписание по группе {data} на {schedule.dateOfCurrent}:\n\n" + schedule.MessageOfUpdate(data).Substring(58);
                return $"✅Вот ваше расписание по {category} - {data} на сегодня:\n(пока в разработке)";
            }
        }
        public static string ExtractMessage(string message) //возвращает сообщение после первых двух слов
        {
            string result = "";
            int j = 0;
            for (int i = 0; i < message.Length; i++)
            {
                if (j >= 2)
                    result += message[i];
                else if (message[i] == ' ')
                    j++;
            }
            return result;
        }
        public static bool HasDate(string str) //проверяет есть ли на конце дата формата 25.10
        {
            int r = 1;
            for (int i = str.Length - 1; i >= 0; i--)
            {
                if ((r == 1 || r == 2 || r == 4 || r == 5) && str[i] >= '0' && str[i] <= '9')
                    r++;
                else if (r == 3 && str[i] == '.')
                    r++;
                else if (r == 6)
                    return true;
                else return false;
            }
            return false;
        }
    }
}
